name: Update README.md and create release
on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - docs/**
      - .buildkite/**
      - .github/**
      - docker-compose.yml
      - renovate.json5
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: login to ghcr.io
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Calculate new version with autotag
        run: |
          curl -sL https://git.io/autotag-install | sh -s -- -b "${RUNNER_TEMP}/bin"
          set -x
          version=$(${RUNNER_TEMP}/bin/autotag -n)
          echo "version=$version" >> $GITHUB_ENV

      - name: Update version in README.md and hooks/pre-command
        run: |
          sed -i'' -Ee "s/telemetry#v(.*):/telemetry#v${version}:/" README.md
          sed -i'' -Ee "s/TAG=\"v(.*)\"/TAG=\"v${version}\"/" hooks/pre-command

      - name: Commit changes
        uses: planetscale/ghcommit-action@ad67f0d18be6a3070fc893dce128fd5408624130 # v0.2.12
        with:
          commit_message: "ðŸ¤– Bump version"
          repo: ${{ github.repository }}
          branch: ${{ github.head_ref || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      # setup qemu and buildx for cross-builds (arm64)
      - name: Set up QEMU (for arm64 builds)
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Release
        run: |
          set -eou pipefail
          set -x

          image="ghcr.io/planetscale/telemetry-buildkite-plugin:v${version}"

          git reset --hard && git clean -ffdx && git pull

          docker buildx build \
            -t "$image" \
            --platform linux/amd64,linux/arm64 \
            --push \
            .

          gh release create "v${version}" --target main --title "v${version}" --generate-notes
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
